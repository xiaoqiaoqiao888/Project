<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.camelot.pmt.mapper.SysUserRoleMapper">
    <resultMap id="BaseResultMap" type="com.camelot.pmt.model.SysUserRole">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="create_by" property="createBy" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, role_id, state, create_by, create_time, update_by, update_time
  </sql>

    <!-- 根据用户ID查询-->
    <select id="selectSysUserRoleListByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from sys_user_role
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <!-- 根据角色ID和用户IDS查询-->
    <select id="selectSysUserRoleListByRoleIdAndUserIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user_role
        where
        <if test="userIds != null">
            <foreach collection="userIds" item="userId" separator="or">
                ( user_id = #{userId} AND role_id = #{roleId} )
            </foreach>
        </if>
        <if test="userIds == null">
            1=2
        </if>
    </select>
    <!--zsf-->
    <!--批量插入-->
    <!-- 角色新增用户-->
    <insert id="roleInsertUser" parameterType="java.util.List" useGeneratedKeys="true"
            keyProperty="id">
        insert into sys_user_role ( user_id ,role_id ,create_by ,update_by ,state
        )
        values
        <foreach collection="list" item="sysUserRole" separator=",">
            ( #{sysUserRole.userId}, #{sysUserRole.roleId}, #{sysUserRole.createBy},
            #{sysUserRole.updateBy}, #{sysUserRole.state}
            )
        </foreach>
    </insert>
    <!-- 用户新增角色-->
    <insert id="userInsertRole" parameterType="java.util.List" useGeneratedKeys="true"
            keyProperty="id">
        insert into sys_user_role ( user_id ,role_id ,create_by ,update_by ,state
        )
        values
        <foreach collection="list" item="sysUserRole" separator=",">
            ( #{sysUserRole.userId}, #{sysUserRole.roleId}, #{sysUserRole.createBy},
            #{sysUserRole.updateBy}, #{sysUserRole.state}
            )
        </foreach>
    </insert>

    <!--zlh-->
    <!--根据用户id角色id删除用户的角色-->
    <delete id="deleteByRoleOrUserIds">
        delete from sys_user_role
        <where>
            role_id = #{id}
            <if test="ids!=null">
                and user_id in
                <foreach collection="ids" item="uid" separator="," open="(" close=")">
                    #{uid}
                </foreach>
            </if>
        </where>
    </delete>

    <!--zlh-->
    <!--根据用户id删除多个角色-->
    <delete id="deleteByUserIdAndRoleIds">
        delete from sys_user_role
        <where>
            user_id = #{userId}
            <if test="roleIds!=null">
                and role_id in
                <foreach collection="roleIds" item="rid" separator="," open="(" close=")">
                    #{rid}
                </foreach>
            </if>
        </where>
    </delete>

    <!--根据角色id 查询所有角色用户对应关系-->
    <select id="selectSysUserRoleByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>

</mapper>