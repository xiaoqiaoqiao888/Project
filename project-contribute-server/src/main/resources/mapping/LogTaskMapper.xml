<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.camelot.pmt.mapper.LogTaskMapper" >
  <resultMap id="BaseResultMap" type="com.camelot.pmt.model.LogTask" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <id column="complexity" property="complexity" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="stage_id" property="stageId" jdbcType="INTEGER" />
    <result column="work_id" property="workId" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="task_code" property="taskCode" jdbcType="VARCHAR" />
    <result column="task_value" property="taskValue" jdbcType="INTEGER" />
    <result column="exp_task_time" property="expTaskTime" jdbcType="INTEGER" />
    <result column="rel_task_time" property="relTaskTime" jdbcType="INTEGER" />
    <result column="rel_start_time" property="relStartTime" jdbcType="TIMESTAMP" />
    <result column="rel_end_time" property="relEndTime" jdbcType="TIMESTAMP" />
    <result column="exp_start_time" property="expStartTime" jdbcType="TIMESTAMP" />
    <result column="exp_end_time" property="expEndTime" jdbcType="TIMESTAMP" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="task_state" property="taskState" jdbcType="INTEGER" />
    <result column="task_person_id" property="taskPersonId" jdbcType="INTEGER" />
    <result column="task_schedule" property="taskSchedule" jdbcType="INTEGER" />
    <result column="operate_desc" property="operateDesc" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.camelot.pmt.model.LogTask" extends="BaseResultMap" >
    <result column="task_desc" property="taskDesc" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, complexity, project_id, stage_id, work_id, task_id, task_name, task_code, task_value, 
    exp_task_time, rel_task_time, rel_start_time, rel_end_time, exp_start_time, exp_end_time, 
    priority, task_state, task_person_id, task_schedule, operate_desc, state, create_by, 
    create_time, update_by, update_time
  </sql>
  <sql id="Blob_Column_List" >
    task_desc
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="com.camelot.pmt.model.LogTaskKey" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log_task
    where id = #{id,jdbcType=INTEGER}
      and complexity = #{complexity,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.camelot.pmt.model.LogTaskKey" >
    delete from log_task
    where id = #{id,jdbcType=INTEGER}
      and complexity = #{complexity,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.camelot.pmt.model.LogTask" >
    insert into log_task (id, complexity, project_id, 
      stage_id, work_id, task_id, 
      task_name, task_code, task_value, 
      exp_task_time, rel_task_time, rel_start_time, 
      rel_end_time, exp_start_time, exp_end_time, 
      priority, task_state, task_person_id, 
      task_schedule, operate_desc, state, 
      create_by, create_time, update_by, 
      update_time, task_desc)
    values (#{id,jdbcType=INTEGER}, #{complexity,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, 
      #{stageId,jdbcType=INTEGER}, #{workId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, 
      #{taskName,jdbcType=VARCHAR}, #{taskCode,jdbcType=VARCHAR}, #{taskValue,jdbcType=INTEGER}, 
      #{expTaskTime,jdbcType=INTEGER}, #{relTaskTime,jdbcType=INTEGER}, #{relStartTime,jdbcType=TIMESTAMP}, 
      #{relEndTime,jdbcType=TIMESTAMP}, #{expStartTime,jdbcType=TIMESTAMP}, #{expEndTime,jdbcType=TIMESTAMP}, 
      #{priority,jdbcType=INTEGER}, #{taskState,jdbcType=INTEGER}, #{taskPersonId,jdbcType=INTEGER}, 
      #{taskSchedule,jdbcType=INTEGER}, #{operateDesc,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{taskDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.camelot.pmt.model.LogTask" >
    insert into log_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="complexity != null" >
        complexity,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="stageId != null" >
        stage_id,
      </if>
      <if test="workId != null" >
        work_id,
      </if>
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="taskCode != null" >
        task_code,
      </if>
      <if test="taskValue != null" >
        task_value,
      </if>
      <if test="expTaskTime != null" >
        exp_task_time,
      </if>
      <if test="relTaskTime != null" >
        rel_task_time,
      </if>
      <if test="relStartTime != null" >
        rel_start_time,
      </if>
      <if test="relEndTime != null" >
        rel_end_time,
      </if>
      <if test="expStartTime != null" >
        exp_start_time,
      </if>
      <if test="expEndTime != null" >
        exp_end_time,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="taskState != null" >
        task_state,
      </if>
      <if test="taskPersonId != null" >
        task_person_id,
      </if>
      <if test="taskSchedule != null" >
        task_schedule,
      </if>
      <if test="operateDesc != null" >
        operate_desc,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="taskDesc != null" >
        task_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="complexity != null" >
        #{complexity,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="stageId != null" >
        #{stageId,jdbcType=INTEGER},
      </if>
      <if test="workId != null" >
        #{workId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskCode != null" >
        #{taskCode,jdbcType=VARCHAR},
      </if>
      <if test="taskValue != null" >
        #{taskValue,jdbcType=INTEGER},
      </if>
      <if test="expTaskTime != null" >
        #{expTaskTime,jdbcType=INTEGER},
      </if>
      <if test="relTaskTime != null" >
        #{relTaskTime,jdbcType=INTEGER},
      </if>
      <if test="relStartTime != null" >
        #{relStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="relEndTime != null" >
        #{relEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expStartTime != null" >
        #{expStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expEndTime != null" >
        #{expEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="taskState != null" >
        #{taskState,jdbcType=INTEGER},
      </if>
      <if test="taskPersonId != null" >
        #{taskPersonId,jdbcType=INTEGER},
      </if>
      <if test="taskSchedule != null" >
        #{taskSchedule,jdbcType=INTEGER},
      </if>
      <if test="operateDesc != null" >
        #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskDesc != null" >
        #{taskDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.camelot.pmt.model.LogTask" >
    update log_task
    <set >
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="stageId != null" >
        stage_id = #{stageId,jdbcType=INTEGER},
      </if>
      <if test="workId != null" >
        work_id = #{workId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskCode != null" >
        task_code = #{taskCode,jdbcType=VARCHAR},
      </if>
      <if test="taskValue != null" >
        task_value = #{taskValue,jdbcType=INTEGER},
      </if>
      <if test="expTaskTime != null" >
        exp_task_time = #{expTaskTime,jdbcType=INTEGER},
      </if>
      <if test="relTaskTime != null" >
        rel_task_time = #{relTaskTime,jdbcType=INTEGER},
      </if>
      <if test="relStartTime != null" >
        rel_start_time = #{relStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="relEndTime != null" >
        rel_end_time = #{relEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expStartTime != null" >
        exp_start_time = #{expStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expEndTime != null" >
        exp_end_time = #{expEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="taskState != null" >
        task_state = #{taskState,jdbcType=INTEGER},
      </if>
      <if test="taskPersonId != null" >
        task_person_id = #{taskPersonId,jdbcType=INTEGER},
      </if>
      <if test="taskSchedule != null" >
        task_schedule = #{taskSchedule,jdbcType=INTEGER},
      </if>
      <if test="operateDesc != null" >
        operate_desc = #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskDesc != null" >
        task_desc = #{taskDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
      and complexity = #{complexity,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.camelot.pmt.model.LogTask" >
    update log_task
    set project_id = #{projectId,jdbcType=INTEGER},
      stage_id = #{stageId,jdbcType=INTEGER},
      work_id = #{workId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      task_name = #{taskName,jdbcType=VARCHAR},
      task_code = #{taskCode,jdbcType=VARCHAR},
      task_value = #{taskValue,jdbcType=INTEGER},
      exp_task_time = #{expTaskTime,jdbcType=INTEGER},
      rel_task_time = #{relTaskTime,jdbcType=INTEGER},
      rel_start_time = #{relStartTime,jdbcType=TIMESTAMP},
      rel_end_time = #{relEndTime,jdbcType=TIMESTAMP},
      exp_start_time = #{expStartTime,jdbcType=TIMESTAMP},
      exp_end_time = #{expEndTime,jdbcType=TIMESTAMP},
      priority = #{priority,jdbcType=INTEGER},
      task_state = #{taskState,jdbcType=INTEGER},
      task_person_id = #{taskPersonId,jdbcType=INTEGER},
      task_schedule = #{taskSchedule,jdbcType=INTEGER},
      operate_desc = #{operateDesc,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      task_desc = #{taskDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
      and complexity = #{complexity,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.camelot.pmt.model.LogTask" >
    update log_task
    set project_id = #{projectId,jdbcType=INTEGER},
      stage_id = #{stageId,jdbcType=INTEGER},
      work_id = #{workId,jdbcType=INTEGER},
      task_id = #{taskId,jdbcType=INTEGER},
      task_name = #{taskName,jdbcType=VARCHAR},
      task_code = #{taskCode,jdbcType=VARCHAR},
      task_value = #{taskValue,jdbcType=INTEGER},
      exp_task_time = #{expTaskTime,jdbcType=INTEGER},
      rel_task_time = #{relTaskTime,jdbcType=INTEGER},
      rel_start_time = #{relStartTime,jdbcType=TIMESTAMP},
      rel_end_time = #{relEndTime,jdbcType=TIMESTAMP},
      exp_start_time = #{expStartTime,jdbcType=TIMESTAMP},
      exp_end_time = #{expEndTime,jdbcType=TIMESTAMP},
      priority = #{priority,jdbcType=INTEGER},
      task_state = #{taskState,jdbcType=INTEGER},
      task_person_id = #{taskPersonId,jdbcType=INTEGER},
      task_schedule = #{taskSchedule,jdbcType=INTEGER},
      operate_desc = #{operateDesc,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
      and complexity = #{complexity,jdbcType=INTEGER}
  </update>
  <select id="logTaskByTaskId" parameterType="int" resultType="java.util.Map">
    select lt.id, lt.complexity, lt.project_id, lt.stage_id, lt.work_id, lt.task_id, lt.task_name,lt.task_code, lt.task_value,
    lt.exp_task_time, lt.rel_task_time, lt.rel_start_time, lt.rel_end_time, lt.exp_start_time, lt.exp_end_time,
    lt.priority, lt.task_state, lt.task_person_id, lt.task_schedule, lt.operate_desc, lt.state, lt.create_by,
    lt.create_time, lt.update_by, lt.update_time,u.real_name
    FROM log_task lt left join sys_user u on u.id = lt.update_by where task_id = #{taskId} ORDER  BY  create_time DESC
  </select>
  <!--根据任务领取人id查询任务操作记录-->
  <resultMap id="OperateResultMap" type="com.camelot.pmt.model.LogTaskDTO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="task_id" property="taskId" jdbcType="INTEGER" />
    <result column="task_person_id" property="taskPersonId" jdbcType="INTEGER" />
    <result column="operate_desc" property="operateDesc" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <select id="selectByTaskPersonId" resultMap="OperateResultMap">
    <![CDATA[SELECT
    lt.*
    FROM
    log_task lt,
    task t
    WHERE lt.task_id = t.id
    AND lt.state = #{state}
    AND lt.task_person_id=#{taskPersonId}
    AND lt.update_time>=#{beginTime}
    AND lt.update_time<=#{endTime}
    ]]>
  </select>
</mapper>