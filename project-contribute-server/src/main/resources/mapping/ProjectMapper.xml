<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.camelot.pmt.mapper.ProjectMapper">
    <resultMap id="BaseResultMap" type="com.camelot.pmt.model.Project">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="project_name" property="projectName" jdbcType="VARCHAR"/>
        <result column="project_code" property="projectCode" jdbcType="VARCHAR"/>
        <result column="project_budget" property="projectBudget" jdbcType="DECIMAL"/>
        <result column="start_time" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="actual_time" property="actualTime" jdbcType="TIMESTAMP"/>
        <result column="end_time" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="project_state" property="projectState" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="create_by" property="createBy" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.camelot.pmt.model.Project" extends="BaseResultMap">
        <result column="project_desc" property="projectDesc" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, project_name, project_code, project_budget, start_time,actual_time, end_time,finsh_time, project_state, 
    state, create_by, create_time, update_by, update_time
  </sql>
    <sql id="Blob_Column_List">
    project_desc
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from project
        where id = #{id,jdbcType=INTEGER} AND state=1
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" keyColumn="id" parameterType="com.camelot.pmt.model.Project">
        insert into project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectName != null">
                project_name,
            </if>
            <if test="projectCode != null">
                project_code,
            </if>
            <if test="projectBudget != null">
                project_budget,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="projectState != null">
                project_state,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
                create_time,
            <if test="updateBy != null">
                update_by,
            </if>
                update_time,
            <if test="projectDesc != null">
                project_desc,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectName != null">
                #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="projectCode != null">
                #{projectCode,jdbcType=VARCHAR},
            </if>
            <if test="projectBudget != null">
                #{projectBudget,jdbcType=DECIMAL},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="projectState != null">
                #{projectState,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
           		now(),
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
          		now(),
            <if test="projectDesc != null">
                #{projectDesc,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.camelot.pmt.model.Project">
        update project
        <set>
            <if test="projectName != null and projectName != ''">
                project_name = #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="projectCode != null and projectCode != ''">
                project_code = #{projectCode,jdbcType=VARCHAR},
            </if>
            <if test="projectBudget != null">
                project_budget = #{projectBudget,jdbcType=DECIMAL},
            </if>
            <if test="startTime != null and startTime != ''">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="endTime != null and endTime != ''">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="projectState != null">
                project_state = #{projectState,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
                update_time = now(),
            <if test="projectDesc != null and projectDesc != ''">
                project_desc = #{projectDesc,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <select id="selectProjectList" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from project
        <where> 
        	project_state = #{projectState,jdbcType=INTEGER} AND state=1
        	<if test="projectName!=null and projectName!=''">
        		<bind name="projectNameLike" value="'%'+projectName+'%'"/>
        		AND project_name like #{projectNameLike}
        	</if>
        	<if test="projectState==0">
        		order by create_time desc
        	</if>
        	<if test="projectState==1 or projectState==3 or projectState==4">
        		order by actual_time desc
        	</if>
        </where>
    </select>
    <select id="selectProjectLists" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from project
        <where>
        	<if test="projectName!=null and projectName!=''">
        		<bind name="projectNameLike" value="'%'+projectName+'%'"/>
        		AND project_name like #{projectNameLike}
        	</if>
        	AND state=1
        </where>
    </select>
    <!-- 项目开始 -->
    <update id="updateProjectTime">
     	update project
    	<set>
                project_state = 1,
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
                update_time = now(),
                actual_time = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!-- 延期进行中 -->
    <update id="updateProjectDelay">
     	update project
    	<set>
                project_state = 4,
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
                update_time = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
     <!-- 项目关闭 -->
    <update id="updateProjectEnd">
     	update project
    	<set>
                state = 0,
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
                update_time = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <!-- 某个项目中已完成的阶段数量-->
    <select id="selectProStageFinsh" resultType="int">
		SELECT
			count(*)
		FROM
			stage
		WHERE
			project_id IN (
				SELECT
					id
				FROM
					project
				WHERE
					project_state IN (1, 4)
			)
		AND stage_state = 3
		AND project_id = #{projectId}
    </select>
    <!-- 某个项目中的所有阶段数量 -->
    <select id="selectProStageAll" resultType="int">
		SELECT
			count(*)
		FROM
			stage
		WHERE
			project_id IN (
				SELECT
					id
				FROM
					project
				WHERE
					project_state IN (1, 4)
			)
		AND project_id = #{projectId}
    </select>
    <!-- 进行中或者延期的项目 -->
    <select id="selectProjectState" resultMap="ResultMapWithBLOBs">
    	 select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from project
        <where>
        	AND state=1
        	AND	project_state in(1,4)
        </where>
    </select>
    <!-- 项目完成 -->
    <update id="updateProjectFinsh">
    		update project
    	<set>
                project_state = 3,
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
                update_time = now(),
                finsh_time = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <!-- 编号校验 -->
    <select id="selectProjectNo" resultType="int">
    	select count(*) from project where project_code = #{projectCode}
    </select>
    
    <!-- 状态统计 -->
    <select id="selectStateCount" resultType="projectDTO">
    	SELECT project_state projectState,count(*) stateCount,SUM(project_budget) sumBudget from project where state=1 GROUP BY project_state 
    </select>
</mapper>