<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.camelot.pmt.mapper.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.camelot.pmt.model.SysUser">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_no" property="userNo" jdbcType="INTEGER"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="user_desc" property="userDesc" jdbcType="VARCHAR"/>
        <result column="cost" property="cost" jdbcType="DECIMAL"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="create_by" property="createBy" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="INTEGER"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_name, user_no,real_name, password, email, tel, user_desc, cost, state, create_by, 
    create_time, update_by, update_time
  </sql>
    <!-- 基本资料信息 -->
    <resultMap id="BaseInfoMap" type="com.camelot.pmt.model.SysUserDTO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="real_name" property="realName" jdbcType="VARCHAR"/>
        <result column="user_no" property="userNo" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="tel" property="tel" jdbcType="VARCHAR"/>
        <result column="group_name" property="groupName" jdbcType="VARCHAR"/>
        <result column="p_id" property="parentId" jdbcType="INTEGER"/>
        <result column="group_id" property="groupId" jdbcType="INTEGER"/>
    </resultMap>
    <!--个人基本信息-基本资料查询-->
    <select id="selectBaseInfo" resultMap="BaseInfoMap" parameterType="java.lang.Integer">
      select su.id,su.user_name,su.real_name,su.user_no,su.tel,su.state,
      su.email,sg.group_name,sg.p_id,sug.group_id
      from
      sys_user_group sug,sys_user su,sys_group sg
      where sug.user_id = su.id
      and sg.id = sug.group_id
      and su.user_no=#{userNo,jdbcType=INTEGER}
    </select>
    <!--查询所有用户-->
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
    </select>
    <!--根据id查询用户-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!--根据id删除用户-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <!--系统设置-员工管理-添加成员-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.camelot.pmt.model.SysUser">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="userNo != null">
                user_no,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="tel != null">
                tel,
            </if>
            <if test="userDesc != null">
                user_desc,
            </if>
            <if test="cost != null">
                cost,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userNo != null">
                #{userNo,jdbcType=INTEGER},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                #{tel,jdbcType=VARCHAR},
            </if>
            <if test="userDesc != null">
                #{userDesc,jdbcType=VARCHAR},
            </if>
            <if test="cost != null">
                #{cost,jdbcType=DECIMAL},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <!--根据id更新用户信息-->
    <update id="updateByPrimaryKeySelective" parameterType="com.camelot.pmt.model.SysUser">
        update sys_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="tel != null">
                tel = #{tel,jdbcType=VARCHAR},
            </if>
            <if test="userDesc != null">
                user_desc = #{userDesc,jdbcType=VARCHAR},
            </if>
            <if test="cost != null">
                cost = #{cost,jdbcType=DECIMAL},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_no = #{userNo,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.camelot.pmt.model.SysUser">
    update sys_user
    set user_name = #{userName,jdbcType=VARCHAR},
    	user_no = #{userNo,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      user_desc = #{userDesc,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=DECIMAL},
      state = #{state,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--zlh-->
    <!--根据角色id查看对应用户-->
    <select id="selectUsersByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select u.id, u.user_name, u.user_no, u.real_name, u.password, u.email, u.tel, u.user_desc,
        u.cost, u.state, u.create_by, u.create_time, u.update_by, u.update_time
        from sys_user u inner join sys_user_role ur
        on u.id = ur.user_id
        where ur.role_id = #{id}
    </select>
</mapper>